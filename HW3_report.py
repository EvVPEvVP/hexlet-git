До конца конечно не всё осознал, что написано в СИ (двух частях), но старался думать максимально на уровне спецификации.
Писал код по игре в покер для двоих человек.
Основные отличия, которые у меня получились между 1 и 3 пунктом:

- Ясность требований: 
Использование предусловий и постусловий делает требования к каждому методу более четкими и понятными. Например, в методе `startGame` ясно указано, что перед началом игры должен быть непустой список игроков, игроки должны быть готовы, и другая игра не должна быть начата.

   # Предусловия
   assert players, "List of players is empty."
   assert not self.players, "Another game is already in progress."

   # Постусловия
   self.players = players
   self.deck = initialize_deck()
   self.current_player = self.players[0]
   self.dealCards(self.players, 2)
   self.placeBlinds(self.players[0], self.players[1], 5, 10)
   

- Безопасность выполнения:
Использование предусловий позволяет предотвратить некорректное использование методов, что ведет к безопасности выполнения программы. 
Например, в методе `bet` проверяется, что сумма ставки не превышает баланс игрока.

   # Предусловия
   assert self.players, "Game not started."
   assert player in self.players, "Player does not exist."
   assert amount <= player.balance, "Bet amount exceeds player's balance."

   # Постусловия
   player.balance -= amount
   self.current_bet += amount

- Сопровождаемость и расширяемость:
Мне показалось, что использование предусловий и постусловий упростило сопровождение кода и его дальнейшее расширение. 
Каждый метод становится более независимым блоком.

- Отладка и тестирование: 
При наличии предусловий и постусловий тестирование становится более эффективнее, так как они предоставляют ясные точки входа и выхода для каждого метода. 
Первый же пункт больше похож на тестирование вслепую.

   # Постусловия
   print("Game ended.")
   if len(self.players) == 1:
       print(f"Player {self.players[0]} wins!")
   else:
       print("It's a tie. Pot is split.")

- Готовые комментарии:
Предусловия, постусловия и в спецификация в целом выглядят как очень информативные комментарии, которые объясняют, что происходит в целом. 
Это делает код более простым в будущем для поддержания или расширения.

   # Постусловия
   print(f"Player {winner} wins!")

- Ясность взаимодействия между методами: 
Думать через спецификацию и проектирование явно помогают видеть связь методов сразу, чем первый метод.

   # Постусловия
   self.small_blind_amount = small_blind_amount
   self.big_blind_amount = big_blind_amount
   self.bet(small_blind_player, small_blind_amount)
   self.bet(big_blind_player, big_blind_amount)
   ```
- Также выглядит так, что если сразу думать на 3 уровне, то это выглядит как более простая оценка трудозатрат, что очень важно, как мне кажется, когда пишешь код с нуля.

